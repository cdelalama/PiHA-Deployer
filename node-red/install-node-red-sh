#!/bin/bash

# Define colors
BLUE='\033[0;34m'
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# GitHub repository details
REPO_OWNER="cdelalama"
REPO_NAME="PiHA-Deployer"
BRANCH="main"

# Function to download a file from GitHub
download_from_github() {
    local file=$1
    local url="https://raw.githubusercontent.com/$REPO_OWNER/$REPO_NAME/$BRANCH/node-red/$file"
    curl -s -O "$url"
}

# Download .env.example
echo -e "${BLUE}Downloading .env.example...${NC}"
download_from_github ".env.example"

if [ ! -f ".env.example" ]; then
    echo -e "${RED}Failed to download .env.example. Exiting.${NC}"
    exit 1
fi

# Default values
DEFAULT_BASE_DIR="/home/cdelalama/docker_temp_setup"
DEFAULT_USERNAME="cdelalama"
DEFAULT_SAMBA_USER="cdelalama"
DEFAULT_DOCKER_COMPOSE_DIR="/srv/docker"
DEFAULT_PORTAINER_DATA_DIR="/srv/docker/portainer"
DEFAULT_NODE_RED_DATA_DIR="/srv/docker/node-red"
DEFAULT_PORTAINER_PORT="9000"
DEFAULT_NODE_RED_PORT="1880"
DEFAULT_IP="auto"

# Create .env file interactively
echo -e "${BLUE}Creating .env file. Please provide values for each variable:${NC}"
{
    read -p "BASE_DIR [$DEFAULT_BASE_DIR]: " BASE_DIR
    BASE_DIR=${BASE_DIR:-$DEFAULT_BASE_DIR}
    echo "BASE_DIR=$BASE_DIR"

    read -p "USERNAME [$DEFAULT_USERNAME]: " USERNAME
    USERNAME=${USERNAME:-$DEFAULT_USERNAME}
    echo "USERNAME=$USERNAME"

    read -p "SAMBA_USER [$DEFAULT_SAMBA_USER]: " SAMBA_USER
    SAMBA_USER=${SAMBA_USER:-$DEFAULT_SAMBA_USER}
    echo "SAMBA_USER=$SAMBA_USER"

    read -s -p "SAMBA_PASS: " SAMBA_PASS
    echo
    echo "SAMBA_PASS=$SAMBA_PASS"

    read -p "DOCKER_COMPOSE_DIR [$DEFAULT_DOCKER_COMPOSE_DIR]: " DOCKER_COMPOSE_DIR
    DOCKER_COMPOSE_DIR=${DOCKER_COMPOSE_DIR:-$DEFAULT_DOCKER_COMPOSE_DIR}
    echo "DOCKER_COMPOSE_DIR=$DOCKER_COMPOSE_DIR"

    read -p "PORTAINER_DATA_DIR [$DEFAULT_PORTAINER_DATA_DIR]: " PORTAINER_DATA_DIR
    PORTAINER_DATA_DIR=${PORTAINER_DATA_DIR:-$DEFAULT_PORTAINER_DATA_DIR}
    echo "PORTAINER_DATA_DIR=$PORTAINER_DATA_DIR"

    read -p "NODE_RED_DATA_DIR [$DEFAULT_NODE_RED_DATA_DIR]: " NODE_RED_DATA_DIR
    NODE_RED_DATA_DIR=${NODE_RED_DATA_DIR:-$DEFAULT_NODE_RED_DATA_DIR}
    echo "NODE_RED_DATA_DIR=$NODE_RED_DATA_DIR"

    read -p "PORTAINER_PORT [$DEFAULT_PORTAINER_PORT]: " PORTAINER_PORT
    PORTAINER_PORT=${PORTAINER_PORT:-$DEFAULT_PORTAINER_PORT}
    echo "PORTAINER_PORT=$PORTAINER_PORT"

    read -p "NODE_RED_PORT [$DEFAULT_NODE_RED_PORT]: " NODE_RED_PORT
    NODE_RED_PORT=${NODE_RED_PORT:-$DEFAULT_NODE_RED_PORT}
    echo "NODE_RED_PORT=$NODE_RED_PORT"

    read -p "IP [$DEFAULT_IP]: " IP
    IP=${IP:-$DEFAULT_IP}
    echo "IP=$IP"
} > .env

# Create BASE_DIR
echo -e "${BLUE}Creating BASE_DIR: $BASE_DIR${NC}"
mkdir -p "$BASE_DIR"

# Copy .env to BASE_DIR
echo -e "${BLUE}Copying .env to $BASE_DIR${NC}"
cp .env "$BASE_DIR/"

# Change to BASE_DIR
cd "$BASE_DIR" || exit

# Download PiHA-Deployer-NodeRED.sh
echo -e "${BLUE}Downloading PiHA-Deployer-NodeRED.sh...${NC}"
download_from_github "PiHA-Deployer-NodeRED.sh"

if [ ! -f "PiHA-Deployer-NodeRED.sh" ]; then
    echo -e "${RED}Failed to download PiHA-Deployer-NodeRED.sh. Exiting.${NC}"
    exit 1
fi

# Download docker-compose.yml
echo -e "${BLUE}Downloading docker-compose.yml...${NC}"
download_from_github "docker-compose.yml"

if [ ! -f "docker-compose.yml" ]; then
    echo -e "${RED}Failed to download docker-compose.yml. Exiting.${NC}"
    exit 1
fi

# Make PiHA-Deployer-NodeRED.sh executable
chmod +x PiHA-Deployer-NodeRED.sh

# Run PiHA-Deployer-NodeRED.sh
echo -e "${BLUE}Running PiHA-Deployer-NodeRED.sh...${NC}"
./PiHA-Deployer-NodeRED.sh

echo -e "${GREEN}Installation complete!${NC}"